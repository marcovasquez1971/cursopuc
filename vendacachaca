/*
SPDX-License-Identifier: CC-BY-4.0
(c) Desenvolvido por Marco Antonio Vasquez Rodriguez
Trabalho de conclusao de curso PUC
*/

pragma solidity 0.8.4;

    contract CachacaPremium {
    
    address public Produtor;

    constructor() {
        Produtor = msg.sender;
    }
    
    struct Produto {
        string marca;
        string madeira;
        uint envelhecimento;
        uint valor;
        uint estoque;
    }
    
    Produto[] public serie;
    mapping(string => Produto) public classificacao;
    
    function inserirProduto(string memory nomeMarca, string memory nomeMadeira, uint anosEnvelhecimento, uint preco, uint quantidadeEstoque) public {
        Produto memory novoProduto = Produto(nomeMarca, nomeMadeira, anosEnvelhecimento, preco, quantidadeEstoque);
        
        serie.push(novoProduto);
        classificacao[nomeMarca] = novoProduto;
    }
    
    function obterMarca(uint lote) public view returns (string memory) {
        return serie[lote].marca;
    }
    //// ate aqui foi bem
    
     struct Venda {
        string comprador;
        string produto;
        string enderecoEntrega;
        uint preco;
    }

    Venda[] public vendas;

    }

    function registrarVenda(
        string memory nomeComprador,
        string memory produto,
        string memory enderecoEntrega,
        uint preco
    ) external returns (bool) {
        require(msg.sender == Produtor, "Somente Produtor pode registrar venda");
        Venda memory novaVenda = Venda(nomeComprador, produto, enderecoEntrega, preco);
        vendas.push(novaVenda);
        return true;
    }
    
}
