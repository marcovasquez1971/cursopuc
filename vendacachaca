/*
SPDX-License-Identifier: CC-BY-4.0
(c) Desenvolvido por Marco Antonio Vasquez Rodriguez
Trabalho de conclusao de curso PUC
*/

pragma solidity 0.8.4;

    contract CachacaPremium {
    
    address public Produtor; //utilizamos produtor ao inves de owner

    constructor() {
        Produtor = msg.sender;

    }
    
    struct Produto {
        string marca;
        string madeira;
        uint envelhecimento;
        uint preco;
    }
    
    struct Venda {
        string comprador;
        string enderecoEntrega;
        string marca;
        address payable carteiraComprador;
        uint quantidade;
        uint preco;
        uint numeroPedido;
    }
    
    Produto[] public ranking;
    mapping(string => Produto) public cachaca;
    
    function inserirProduto(
        string memory nomeMarca, 
        string memory nomeMadeira, 
        uint anosEnvelhecimento, 
        uint preco) external returns (bool) {
        require(msg.sender == Produtor,"somente o produtor pode inserir produto");
        Produto memory novoProduto = Produto(nomeMarca, nomeMadeira, anosEnvelhecimento, preco);
        ranking.push(novoProduto);
        cachaca[nomeMarca] = novoProduto;
        return true;
    }

    function obterMarca(uint marca) public view returns (string memory) {
        return ranking[marca].marca;
    }
    
}
